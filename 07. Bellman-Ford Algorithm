class Solution {
    static int[] bellman_ford(int V, ArrayList<ArrayList<Integer>> edges, int S) {
        int[] dist = new int[V];
        Arrays.fill(dist, Integer.MAX_VALUE);
        dist[S] = 0;
        for(int i=0; i<V-1; i++){
            for(ArrayList<Integer> edge: edges){
                int u  = edge.get(0);
                int v  = edge.get(1);
                int eW = edge.get(2);
                if(dist[u] == Integer.MAX_VALUE) continue;
                if(dist[u] + eW < dist[v]){
                    dist[v] = dist[u] + eW;
                }
            }
        }
        for(ArrayList<Integer> edge: edges){
            int u  = edge.get(0);
            int v  = edge.get(1);
            int eW = edge.get(2);
            if(dist[u] == Integer.MAX_VALUE) continue;
            if(dist[u] + eW < dist[v]){
                return new int[]{-1};
            }
        }
        return dist;
    }
}
