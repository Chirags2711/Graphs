// 1. Using DFS

class Solution {
    public boolean isBipartite(int[][] graph) {
        int n = graph.length;
        int color[] = new int[n];
        for(int i=0; i<n; i++){
            if(color[i] == 0 && !checkBipartite(i, 1, graph, color)){
                return false;
            }
        }
        return true;
    }
    public boolean checkBipartite(int currNode, int fill, int[][] adjList, int color[]){
        if(color[currNode] != 0){
            return color[currNode] == fill;
        }
        color[currNode] = fill;
        for(int nei: adjList[currNode]){
            if(!checkBipartite(nei, fill == 1 ? 2 : 1, adjList, color)){
                return false;
            }
        }
        return true;
    }
}
